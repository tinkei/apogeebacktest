name: apogeebacktest

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build package
        run: |
          python -m build
      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: apogeebacktest-build
          path: |
            dist/apogeebacktest-0.0.2-py3-none-any.whl
            dist/apogeebacktest-0.0.2.tar.gz
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest src/apogeebacktest --doctest-modules --junitxml=test-results-${{ matrix.python-version }}.xml --cov=src/apogeebacktest --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: |
            test-results-${{ matrix.python-version }}.xml
            coverage.xml
            htmlcov
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
